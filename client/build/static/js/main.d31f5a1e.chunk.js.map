{"version":3,"sources":["reducer/index.js","store/store.js","actions/index.js","services/foodsApiService.js","components/add-food.js","components/header.js","components/errorPage.js","components/card-item.js","components/card-groupe.js","components/app.js","index.js"],"names":["initialState","foods","loading","error","reducer","state","action","type","payload","idx","findIndex","item","id","toString","slice","index","logger","applyMiddleware","storeAPI","next","console","group","log","getState","result","groupEnd","store","createStore","foodsLoaded","foodsRequested","foodsError","getAllFoods","a","fetch","ok","Error","json","addFood","data","method","headers","body","JSON","stringify","updateFood","deleteFood","connect","foodAdd","food","show","handleClose","useState","validated","setValidated","title","img","price","setData","description","onChange","e","target","name","value","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","preventDefault","find","trim","toLowerCase","then","res","catch","Control","className","placeholder","Group","isInvalid","required","Feedback","as","ButtonGroup","aria-label","Button","onClick","variant","modalShow","setModalShow","Navbar","bg","Brand","href","ErrorPage","foodUpdate","foodDel","props","edit","setEdit","cardBody","Card","Subtitle","Text","editCardBody","er","onDelete","style","width","Img","minHeight","src","foodsList","map","content","Spinner","animation","useEffect","Jumbotron","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d31f5a1e.chunk.js","sourcesContent":["let initialState = {\r\n    foods: [],\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'FOODS-LOADED':\r\n            return {\r\n                ...state,\r\n                foods: action.payload,\r\n                loading: false,\r\n                error: false\r\n            }\r\n\r\n        case 'FOODS-REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false\r\n            }\r\n\r\n        case 'FOODS-ERROR':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true\r\n            }\r\n\r\n        case 'FOODS-UPDATE':\r\n            const idx = state.foods.findIndex(item=>item.id.toString() === action.payload.id.toString());\r\n\r\n            return {\r\n                ...state,\r\n                foods: [...state.foods.slice(0, idx), action.payload, ...state.foods.slice(idx+1)]\r\n            }\r\n\r\n        case 'FOODS-ADD':\r\n            return {\r\n                ...state,\r\n                foods: [...state.foods, action.payload]\r\n            }\r\n\r\n        case 'FOODS-DEL':\r\n            const index = state.foods.findIndex(item=>item.id.toString() === action.payload.toString());\r\n\r\n            return {\r\n                ...state,\r\n                foods: [...state.foods.slice(0, index), ...state.foods.slice(index+1)]\r\n            }    \r\n\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport reducer from '../reducer';\r\n\r\nconst loggerMiddleware = storeAPI => next => action => {\r\n    console.group('action', action.type)\r\n    console.log('prev state', storeAPI.getState())\r\n    console.log('action', action)\r\n    let result = next(action)\r\n    console.log('next state', storeAPI.getState())\r\n    console.groupEnd()\r\n    return result\r\n  }\r\n\r\n  const logger = applyMiddleware(loggerMiddleware);\r\n\r\nconst store = createStore(reducer, logger);\r\n\r\nexport default store;","const foodsLoaded = (foods)=>{\r\n    return {\r\n        type: 'FOODS-LOADED',\r\n        payload: foods\r\n    }\r\n}\r\n\r\nconst foodsRequested = ()=>{\r\n    return {\r\n        type: 'FOODS-REQUESTED'\r\n    }\r\n}\r\n\r\nconst foodsError = ()=>{\r\n    return {\r\n        type: 'FOODS-ERROR'\r\n    }\r\n}\r\n\r\nconst foodUpdate = (food)=>{\r\n    return {\r\n        type: 'FOODS-UPDATE',\r\n        payload: food\r\n    }\r\n}\r\n\r\nconst foodAdd = (food)=>{\r\n    return {\r\n        type: 'FOODS-ADD',\r\n        payload: food\r\n    }\r\n}\r\n\r\nconst foodDel = (id)=>{\r\n    return {\r\n        type: 'FOODS-DEL',\r\n        payload: id\r\n    }\r\n}\r\n\r\n\r\nexport {foodsLoaded, foodsRequested, foodsError, foodUpdate, foodAdd, foodDel}","const getAllFoods = async () => {\r\n\r\n    const result = await fetch('/api/foods');\r\n\r\n    if (!result.ok) {\r\n        throw new Error('server error')\r\n    }\r\n\r\n    return await result.json();\r\n}\r\n\r\nconst addFood = async (data) => {\r\n    const result = await fetch('/api/foods', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n    });\r\n\r\n    return await result.json();\r\n}\r\n\r\n\r\nconst updateFood = async (data) => {\r\n    const result = await fetch('/api/foods', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n    });\r\n\r\n    return await result.json();\r\n}\r\n\r\nconst deleteFood = async (id) => {\r\n    const result = await fetch('/api/foods/' + id, {\r\n        method: 'DELETE'\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\nexport  {getAllFoods, addFood, updateFood, deleteFood};","import React, { useState } from 'react';\r\nimport { addFood } from '../services/foodsApiService';\r\nimport { connect } from 'react-redux';\r\nimport { foodsError, foodAdd } from '../actions';\r\nimport { Modal, Button, Form, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst AddFood = ({show, handleClose, foodsError, foods, foodAdd}) => {\r\n\r\n    const [validated, setValidated] = useState(false)\r\n\r\n    const [data, setData] = useState({\r\n        title: '',\r\n        img: '',\r\n        price: '',\r\n    });\r\n\r\n    \r\n    const {title, img, price, description} = data;\r\n\r\n    const onChange = (e) => {\r\n        setValidated(false)\r\n        setData({\r\n            ...data,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setValidated(false)\r\n\r\n        if (foods.find(item=>item.title.trim().toLowerCase() === data.title.trim().toLowerCase())) {\r\n            setValidated(true);\r\n            return\r\n        }\r\n\r\n        addFood(data)\r\n        .then(res=>{\r\n            handleClose();\r\n            foodAdd(res);            \r\n        })\r\n        .catch(e=>foodsError());\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add new hot-dog</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form validated={validated} onSubmit={onSubmit}>\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Img URL\" onChange={onChange} name=\"img\" type=\"text\" value={img} />\r\n                    <Form.Group>\r\n                        <Form.Control isInvalid={validated} required className=\"mb-2\" placeholder=\"Title\" onChange={onChange} name=\"title\" type=\"text\" value={title} />\r\n                        <Form.Control.Feedback type=\"invalid\">This title already exists</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Control required className=\"mb-2\" placeholder=\"Price\" onChange={onChange} name=\"price\" type=\"number\" value={price} />\r\n                    <Form.Control className=\"mb-2\" placeholder=\"Description\" onChange={onChange} name=\"description\" as=\"textarea\" value={description} />\r\n                    <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button onClick={handleClose} type=\"button\" className=\"mt-1\" variant=\"secondary\">No thanks!</Button>\r\n                        <Button type=\"submit\" className=\"mt-1\" variant=\"dark\">Add</Button>\r\n                    </ButtonGroup>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({foods}) => {\r\n    return {\r\n        foods\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {foodsError, foodAdd})(AddFood);","import React, { useState } from 'react';\r\nimport AddFood from './add-food';\r\nimport { Navbar, Button } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <AddFood show={modalShow} handleClose={()=>setModalShow(false)}/>\r\n            <Navbar className=\"d-flex justify-content-between\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    CRUD\r\n                </Navbar.Brand>\r\n                <Button onClick={()=>setModalShow(true)} variant=\"outline-light\">Add hot-dog</Button>{' '}\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <h1>Error...</h1>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { foodUpdate, foodDel, foodsLoaded, foodsRequested, foodsError } from '../actions';\r\nimport { updateFood, deleteFood, getAllFoods, } from '../services/foodsApiService';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\n\r\n\r\nconst CardItem = (props) => {\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [data, setData] = useState({\r\n        title: props.title,\r\n        price: props.price,\r\n        img: props.img,\r\n        description: props.description,\r\n        id: props.id\r\n    })\r\n\r\n    const {title, img, price, description, id} = data;\r\n\r\n    const onChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        updateFood(data)\r\n        .then(res=>{\r\n            setEdit(false)\r\n            props.foodUpdate(res)\r\n        })\r\n        .catch(er=>console.log(er))\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        deleteFood(id)\r\n        .then(res=>{\r\n            props.foodDel(id)\r\n            // props.foodsRequested();\r\n            // getAllFoods()\r\n            // .then(res=>props.foodsLoaded(res))\r\n            // .catch(e=>console.log(e))\r\n        })\r\n        .catch(e=>console.log(e))\r\n    }\r\n\r\n\r\n    const onEdit = () => {\r\n        setEdit(true)\r\n    }\r\n\r\n    const cardBody = (\r\n        <Card.Body className=\"body-card\">\r\n            <Card.Title>{title}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">{`${price}$`}</Card.Subtitle>\r\n            <Card.Text className=\"mb-5\">{description}</Card.Text>\r\n            <Button onClick={onEdit} className=\"w-100 button-card\" variant=\"secondary\">Edit</Button>\r\n        </Card.Body>\r\n    );\r\n\r\n    const editCardBody = (\r\n        <Form onSubmit={onUpdate}>\r\n             <Form.Control onChange={onChange} name=\"img\" type=\"text\" value={img} />\r\n             <Form.Control onChange={onChange} name=\"title\" type=\"text\" value={title} />\r\n             <Form.Control onChange={onChange} name=\"price\" type=\"text\" value={price} />\r\n             <Form.Control onChange={onChange} name=\"description\" as=\"textarea\" value={description} />\r\n             <Form.Control name=\"id\" type=\"hidden\" value={id} />\r\n             <Button type=\"submit\" className=\"w-100 mt-1\" variant=\"secondary\">Update</Button>\r\n             <Button onClick={()=>onDelete(id)} type=\"button\" className=\"w-100 mt-1\" variant=\"secondary\">Delete</Button>\r\n        </Form>\r\n    );\r\n\r\n    const body = edit ? editCardBody : cardBody;\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\">\r\n            <Card className=\"mr-3 ml-3 mt-3\" style={{ width: '18rem' }}>\r\n                <Card.Img style={{minHeight: '250px'}} variant=\"top\" src={img} />\r\n                {body}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {foodUpdate, foodDel, foodsLoaded, foodsRequested, foodsError})(CardItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport ErrorPage from './errorPage';\r\nimport CardItem from './card-item';\r\n\r\nconst CardGroupe = ({foods, loading, error}) => {\r\n\r\n    \r\n\r\n    const foodsList = (\r\n        foods.map( item => <CardItem \r\n        key={item.id}\r\n        title={item.title} \r\n        img={item.img}\r\n        price={item.price}\r\n        description={item.description}\r\n        id={item.id}\r\n        />) \r\n        );\r\n\r\n    const content = error ? <ErrorPage /> : foodsList;\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center\">\r\n           {\r\n            loading ? <Spinner className=\"spin\" animation=\"border\" variant=\"secondary\" /> : content \r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({foods, loading, error}) => {\r\n    return {\r\n        foods,\r\n        loading,\r\n        error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardGroupe);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { foodsLoaded, foodsRequested, foodsError } from '../actions';\r\nimport Header from '../components/header';\r\nimport CardGroupe from '../components/card-groupe';\r\nimport { getAllFoods } from '../services/foodsApiService';\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\nfunction App({foods, foodsLoaded, foodsRequested}) {\r\n\r\n  useEffect(() => {\r\n\r\n    foodsRequested();\r\n    getAllFoods().then(res=>foodsLoaded(res)).catch(e=>foodsError())\r\n    \r\n  }, [foodsLoaded, foodsRequested]);\r\n\r\n  return (\r\n    <> \r\n        <Header />\r\n        <Jumbotron className=\"jambo\">\r\n            <Container>\r\n                <CardGroupe />\r\n            </Container>\r\n        </Jumbotron>\r\n    </>\r\n   \r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({foods}) => {\r\n  return {\r\n    foods\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {foodsLoaded, foodsRequested, foodsError})(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nimport App from './components/app';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}